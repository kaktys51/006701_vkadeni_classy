#include <iostream>

using std::cout;
using std::cin;

/*
Точка в геометрії — це позиція в просторі. Ми можемо визначити точку в 3D-просторі як набір координат x, y і z. Наприклад, Point(0.0, 1.0, 2.0) буде точкою в координатному просторі x = 0.0, y = 1.0 і z = 2.0.

Вектор в фізиці — це величина, яка має довжину і напрямок (але не положення). Ми можемо визначити вектор в 3D-просторі через значення x, y і z, що представляють напрям вектора вздовж осей x, y і z.

Наприклад, Vector(1.0, 0.0, 0.0) буде вектором, що представляє напрямок тільки вздовж додатної осі x довжиною 1.0.

Вектор може застосовуватися до точки для її переміщення на нову позицію. Це робиться шляхом додавання напрямку вектора до позиції точки. Наприклад, Point(0.0, 1.0, 2.0) + Vector(0.0, 2.0, 0.0) дасть точку (0.0, 3.0, 2.0).

Точки і вектори часто використовуються в комп’ютерній графіці (точка для представлення вершин фігури, а вектори — для переміщення фігури).

Виходячи з наступної програми:
a) Зробіть клас Point3D внутрішнім у класі Vector3D і реалізуйте метод moveByVector() в класі Point3D.
b) використайте цей метод в головній функції, щоб змінити координати точки
*/

class Vector3D
{
private:
	double v_x, v_y, v_z;
public:
	Vector3D(double x = 0.0, double y = 0.0, double z = 0.0)
		: v_x(x), v_y(y), v_z(z)
	{

	}

	class Point3D
	{
	private:
		double m_x, m_y, m_z;

	public:
		Point3D(double x = 0.0, double y = 0.0, double z = 0.0)
			: m_x(x), m_y(y), m_z(z)
		{

		}

		void print()
		{
			cout << "Точка(" << m_x << " , " << m_y << " , " << m_z << ")\n";
		}

		void moveByVector(const Vector3D& v)
		{
			m_x += v.v_x;
			m_y += v.v_y;
			m_z += v.v_z;
			cout << "Точка сдвинута по вектору" << std::endl;
		}
	};

	void print()
	{
		cout << "Вектор(" << v_x << " , " << v_y << " , " << v_z << ")\n";
	}
};


int main()
{
	system("chcp 1251");

	Vector3D v(3.0, 3.0, -2.0);
	Vector3D::Point3D p1(0.0, 0.2, 0.0);

	v.print();
	p1.print();
	p1.moveByVector(v);
	p1.print();


	return 0;
}